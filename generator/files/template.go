package files

import (
	"bytes"
	"text/template"

	"github.com/Sirupsen/logrus"
)

var (
	fileTemplate *template.Template
)

const (
	fileTemplateString = `// This file is generated by protoc-gen-persist 
// Source File: {{.GetOrigName}}
// DO NOT EDIT !

package {{.GetPackageName}}

{{template "import_template" .ImportList}}

{{template "implement_structs" .Structures}}

{{template "implement_services" .ServiceList}}
`
)

// {{range $method := $service.Method}}
// {{template ""}}
// func (s *{{$service.GetName}}Impl) {{$method.GetName}}() {}
// {{end}}
// {{end}}

func init() {
	logrus.Debug("files package init()")
	var err error
	fileTemplate, err = template.New("fileTemplate").Parse(fileTemplateString)
	if err != nil {
		logrus.WithError(err).Fatal("Fail to parse file template")
	}
	for n, tmpl := range TemplateList {
		_, err = fileTemplate.Parse(tmpl)
		if err != nil {
			logrus.WithError(err).Fatalf("Fatal error parsing template %s", n)
		}
	}
}

func ExecuteFileTemplate(fileStruct *FileStruct) string {
	var buffer bytes.Buffer
	err := fileTemplate.Execute(&buffer, fileStruct)
	if err != nil {
		logrus.WithError(err).Fatal("Fatal error executing file template")
	}
	return buffer.String()
}
