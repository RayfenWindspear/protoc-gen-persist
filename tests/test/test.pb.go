// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tests/test/test.proto

/*
Package test is a generated protocol buffer package.

It is generated from these files:
	tests/test/test.proto

It has these top-level messages:
	Test
	ExampleTable
	PartialTable
	TwoMappedAndEnum
	Name
	Ids
	NumRows
	ExampleTableRange
*/
package test

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TestEnum int32

const (
	TestEnum_first  TestEnum = 0
	TestEnum_second TestEnum = 1
)

var TestEnum_name = map[int32]string{
	0: "first",
	1: "second",
}
var TestEnum_value = map[string]int32{
	"first":  0,
	"second": 1,
}

func (x TestEnum) String() string {
	return proto.EnumName(TestEnum_name, int32(x))
}
func (TestEnum) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Test struct {
	Id   int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Test) Reset()                    { *m = Test{} }
func (m *Test) String() string            { return proto.CompactTextString(m) }
func (*Test) ProtoMessage()               {}
func (*Test) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Test) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Test) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ExampleTable struct {
	Id        int64                      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	StartTime *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	Name      string                     `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (m *ExampleTable) Reset()                    { *m = ExampleTable{} }
func (m *ExampleTable) String() string            { return proto.CompactTextString(m) }
func (*ExampleTable) ProtoMessage()               {}
func (*ExampleTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ExampleTable) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ExampleTable) GetStartTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *ExampleTable) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type PartialTable struct {
	Id        int64                      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	StartTime *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
}

func (m *PartialTable) Reset()                    { *m = PartialTable{} }
func (m *PartialTable) String() string            { return proto.CompactTextString(m) }
func (*PartialTable) ProtoMessage()               {}
func (*PartialTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PartialTable) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PartialTable) GetStartTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

type TwoMappedAndEnum struct {
	StartTime *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime   *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	GenEnum   TestEnum                   `protobuf:"varint,3,opt,name=gen_enum,json=genEnum,enum=tests.test.TestEnum" json:"gen_enum,omitempty"`
}

func (m *TwoMappedAndEnum) Reset()                    { *m = TwoMappedAndEnum{} }
func (m *TwoMappedAndEnum) String() string            { return proto.CompactTextString(m) }
func (*TwoMappedAndEnum) ProtoMessage()               {}
func (*TwoMappedAndEnum) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *TwoMappedAndEnum) GetStartTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *TwoMappedAndEnum) GetEndTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *TwoMappedAndEnum) GetGenEnum() TestEnum {
	if m != nil {
		return m.GenEnum
	}
	return TestEnum_first
}

type Name struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *Name) Reset()                    { *m = Name{} }
func (m *Name) String() string            { return proto.CompactTextString(m) }
func (*Name) ProtoMessage()               {}
func (*Name) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Name) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Ids struct {
	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids" json:"ids,omitempty"`
}

func (m *Ids) Reset()                    { *m = Ids{} }
func (m *Ids) String() string            { return proto.CompactTextString(m) }
func (*Ids) ProtoMessage()               {}
func (*Ids) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Ids) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

type NumRows struct {
	Count int64 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
}

func (m *NumRows) Reset()                    { *m = NumRows{} }
func (m *NumRows) String() string            { return proto.CompactTextString(m) }
func (*NumRows) ProtoMessage()               {}
func (*NumRows) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *NumRows) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ExampleTableRange struct {
	StartId int64 `protobuf:"varint,1,opt,name=start_id,json=startId" json:"start_id,omitempty"`
	EndId   int64 `protobuf:"varint,2,opt,name=end_id,json=endId" json:"end_id,omitempty"`
}

func (m *ExampleTableRange) Reset()                    { *m = ExampleTableRange{} }
func (m *ExampleTableRange) String() string            { return proto.CompactTextString(m) }
func (*ExampleTableRange) ProtoMessage()               {}
func (*ExampleTableRange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ExampleTableRange) GetStartId() int64 {
	if m != nil {
		return m.StartId
	}
	return 0
}

func (m *ExampleTableRange) GetEndId() int64 {
	if m != nil {
		return m.EndId
	}
	return 0
}

func init() {
	proto.RegisterType((*Test)(nil), "tests.test.Test")
	proto.RegisterType((*ExampleTable)(nil), "tests.test.ExampleTable")
	proto.RegisterType((*PartialTable)(nil), "tests.test.PartialTable")
	proto.RegisterType((*TwoMappedAndEnum)(nil), "tests.test.TwoMappedAndEnum")
	proto.RegisterType((*Name)(nil), "tests.test.Name")
	proto.RegisterType((*Ids)(nil), "tests.test.Ids")
	proto.RegisterType((*NumRows)(nil), "tests.test.NumRows")
	proto.RegisterType((*ExampleTableRange)(nil), "tests.test.ExampleTableRange")
	proto.RegisterEnum("tests.test.TestEnum", TestEnum_name, TestEnum_value)
}

func init() { proto.RegisterFile("tests/test/test.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 405 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0x4d, 0x6b, 0xdc, 0x30,
	0x10, 0xad, 0xd6, 0xfb, 0x39, 0x0d, 0xc1, 0x15, 0x09, 0xdd, 0xee, 0x25, 0x5b, 0x9f, 0x96, 0x40,
	0x64, 0x48, 0x69, 0x69, 0xe9, 0xa9, 0x85, 0x3d, 0xec, 0xa1, 0xa1, 0x08, 0x5f, 0xda, 0x4b, 0x90,
	0xad, 0x89, 0x2b, 0xb0, 0x24, 0x63, 0xc9, 0xa4, 0x7f, 0xac, 0xff, 0xaf, 0x48, 0xce, 0xa6, 0xa6,
	0xa7, 0x16, 0x72, 0x19, 0x66, 0xec, 0x79, 0x7a, 0x6f, 0xde, 0x0c, 0x9c, 0x7b, 0x74, 0xde, 0xe5,
	0x21, 0xc6, 0xc0, 0xda, 0xce, 0x7a, 0x4b, 0x21, 0x7e, 0x66, 0x21, 0x6e, 0x2e, 0x6a, 0x6b, 0xeb,
	0x06, 0xf3, 0xf8, 0xa7, 0xec, 0xef, 0x72, 0xaf, 0x34, 0x3a, 0x2f, 0x74, 0x3b, 0x34, 0x67, 0x97,
	0x30, 0x2d, 0xd0, 0x79, 0x7a, 0x0a, 0x13, 0x25, 0xd7, 0x64, 0x4b, 0x76, 0x33, 0x3e, 0x51, 0x92,
	0x52, 0x98, 0x1a, 0xa1, 0x71, 0x3d, 0xd9, 0x92, 0xdd, 0x8a, 0xc7, 0x3c, 0xd3, 0x70, 0xb2, 0xff,
	0x29, 0x74, 0xdb, 0x60, 0x21, 0xca, 0x06, 0x47, 0x98, 0x24, 0x62, 0x3e, 0x00, 0x38, 0x2f, 0x3a,
	0x7f, 0x1b, 0x48, 0x22, 0xf2, 0xf9, 0xf5, 0x86, 0x0d, 0x0a, 0xd8, 0x51, 0x01, 0x2b, 0x8e, 0x0a,
	0xf8, 0x2a, 0x76, 0x87, 0xfa, 0x91, 0x2e, 0x19, 0xd1, 0x7d, 0x83, 0x93, 0xaf, 0xa2, 0xf3, 0x4a,
	0x34, 0x4f, 0x4d, 0x97, 0xfd, 0x22, 0x90, 0x16, 0xf7, 0xf6, 0x8b, 0x68, 0x5b, 0x94, 0x9f, 0x8c,
	0xdc, 0x9b, 0x5e, 0xff, 0xf5, 0x1e, 0xf9, 0x1f, 0xf9, 0x6f, 0x61, 0x89, 0x46, 0xfe, 0xab, 0x90,
	0x05, 0x1a, 0x19, 0x61, 0x39, 0x2c, 0x6b, 0x34, 0xb7, 0x68, 0x7a, 0x1d, 0x27, 0x3f, 0xbd, 0x3e,
	0x63, 0x7f, 0x96, 0xc7, 0xc2, 0x62, 0x82, 0x32, 0xbe, 0xa8, 0xd1, 0x84, 0x24, 0xdb, 0xc0, 0xf4,
	0x46, 0x8c, 0xec, 0x22, 0x23, 0xbb, 0x5e, 0x42, 0x72, 0x90, 0x8e, 0xa6, 0x90, 0x28, 0xe9, 0xd6,
	0x64, 0x9b, 0xec, 0x12, 0x1e, 0xd2, 0xec, 0x02, 0x16, 0x37, 0xbd, 0xe6, 0xf6, 0xde, 0xd1, 0x33,
	0x98, 0x55, 0xb6, 0x37, 0xfe, 0xc1, 0xc5, 0xa1, 0xc8, 0xf6, 0xf0, 0x62, 0xbc, 0x57, 0x2e, 0x4c,
	0x8d, 0xf4, 0x15, 0x2c, 0x07, 0x37, 0x1e, 0x3d, 0x5f, 0xc4, 0xfa, 0x20, 0xe9, 0x39, 0xcc, 0xc3,
	0xb4, 0x4a, 0xc6, 0x59, 0x13, 0x3e, 0x43, 0x23, 0x0f, 0xf2, 0xf2, 0x35, 0x2c, 0x8f, 0x8a, 0xe9,
	0x0a, 0x66, 0x77, 0xaa, 0x73, 0x3e, 0x7d, 0x46, 0x01, 0xe6, 0x0e, 0x2b, 0x6b, 0x64, 0x4a, 0x3e,
	0xbf, 0xff, 0xfe, 0xae, 0x56, 0xfe, 0x47, 0x5f, 0xb2, 0xca, 0xea, 0xdc, 0x57, 0xa6, 0x6a, 0x6c,
	0x2f, 0x87, 0xeb, 0xac, 0xae, 0x6a, 0x34, 0x57, 0x2d, 0x76, 0x4e, 0x3d, 0xdc, 0xf3, 0x70, 0xda,
	0x1f, 0x43, 0x28, 0xe7, 0xb1, 0xe7, 0xcd, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x10, 0xc7, 0xb1,
	0xab, 0xf4, 0x02, 0x00, 0x00,
}
