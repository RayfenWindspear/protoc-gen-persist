// Code generated by protoc-gen-go.
// source: persist/options.proto
// DO NOT EDIT!

/*
Package persist is a generated protocol buffer package.

It is generated from these files:
	persist/options.proto

It has these top-level messages:
	Table
	RPCImpl
	QLImpl
*/
package persist

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PersistenceType int32

const (
	PersistenceType_POSTGRES PersistenceType = 0
	PersistenceType_MONGO    PersistenceType = 1
)

var PersistenceType_name = map[int32]string{
	0: "POSTGRES",
	1: "MONGO",
}
var PersistenceType_value = map[string]int32{
	"POSTGRES": 0,
	"MONGO":    1,
}

func (x PersistenceType) String() string {
	return proto.EnumName(PersistenceType_name, int32(x))
}
func (PersistenceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TemplateType int32

const (
	TemplateType_INSERT       TemplateType = 0
	TemplateType_READ         TemplateType = 1
	TemplateType_BATCH_INSERT TemplateType = 2
	TemplateType_BATCH_READ   TemplateType = 3
)

var TemplateType_name = map[int32]string{
	0: "INSERT",
	1: "READ",
	2: "BATCH_INSERT",
	3: "BATCH_READ",
}
var TemplateType_value = map[string]int32{
	"INSERT":       0,
	"READ":         1,
	"BATCH_INSERT": 2,
	"BATCH_READ":   3,
}

func (x TemplateType) String() string {
	return proto.EnumName(TemplateType_name, int32(x))
}
func (TemplateType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Table struct {
	Name    string          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Storage PersistenceType `protobuf:"varint,2,opt,name=storage,enum=persist.PersistenceType" json:"storage,omitempty"`
}

func (m *Table) Reset()                    { *m = Table{} }
func (m *Table) String() string            { return proto.CompactTextString(m) }
func (*Table) ProtoMessage()               {}
func (*Table) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Table) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Table) GetStorage() PersistenceType {
	if m != nil {
		return m.Storage
	}
	return PersistenceType_POSTGRES
}

type RPCImpl struct {
	Template TemplateType `protobuf:"varint,1,opt,name=template,enum=persist.TemplateType" json:"template,omitempty"`
}

func (m *RPCImpl) Reset()                    { *m = RPCImpl{} }
func (m *RPCImpl) String() string            { return proto.CompactTextString(m) }
func (*RPCImpl) ProtoMessage()               {}
func (*RPCImpl) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RPCImpl) GetTemplate() TemplateType {
	if m != nil {
		return m.Template
	}
	return TemplateType_INSERT
}

type QLImpl struct {
	Query     string   `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	Arguments []string `protobuf:"bytes,2,rep,name=arguments" json:"arguments,omitempty"`
}

func (m *QLImpl) Reset()                    { *m = QLImpl{} }
func (m *QLImpl) String() string            { return proto.CompactTextString(m) }
func (*QLImpl) ProtoMessage()               {}
func (*QLImpl) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *QLImpl) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *QLImpl) GetArguments() []string {
	if m != nil {
		return m.Arguments
	}
	return nil
}

var E_Rpc = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*RPCImpl)(nil),
	Field:         560560,
	Name:          "persist.rpc",
	Tag:           "bytes,560560,opt,name=rpc",
	Filename:      "persist/options.proto",
}

var E_Ql = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*QLImpl)(nil),
	Field:         560565,
	Name:          "persist.ql",
	Tag:           "bytes,560565,opt,name=ql",
	Filename:      "persist/options.proto",
}

var E_Pk = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         560561,
	Name:          "persist.pk",
	Tag:           "varint,560561,opt,name=pk",
	Filename:      "persist/options.proto",
}

var E_AutoGen = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         560562,
	Name:          "persist.auto_gen",
	Tag:           "varint,560562,opt,name=auto_gen,json=autoGen",
	Filename:      "persist/options.proto",
}

var E_Table = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*Table)(nil),
	Field:         560563,
	Name:          "persist.table",
	Tag:           "bytes,560563,opt,name=table",
	Filename:      "persist/options.proto",
}

var E_RpcEnabled = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.ServiceOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         560564,
	Name:          "persist.rpc_enabled",
	Tag:           "varint,560564,opt,name=rpc_enabled,json=rpcEnabled",
	Filename:      "persist/options.proto",
}

func init() {
	proto.RegisterType((*Table)(nil), "persist.Table")
	proto.RegisterType((*RPCImpl)(nil), "persist.RPCImpl")
	proto.RegisterType((*QLImpl)(nil), "persist.QLImpl")
	proto.RegisterEnum("persist.PersistenceType", PersistenceType_name, PersistenceType_value)
	proto.RegisterEnum("persist.TemplateType", TemplateType_name, TemplateType_value)
	proto.RegisterExtension(E_Rpc)
	proto.RegisterExtension(E_Ql)
	proto.RegisterExtension(E_Pk)
	proto.RegisterExtension(E_AutoGen)
	proto.RegisterExtension(E_Table)
	proto.RegisterExtension(E_RpcEnabled)
}

func init() { proto.RegisterFile("persist/options.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 483 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x93, 0xdd, 0x6a, 0xdb, 0x30,
	0x14, 0xc7, 0x6b, 0xb7, 0xf9, 0x3a, 0x0d, 0xa9, 0x11, 0x2b, 0x84, 0xb1, 0x8f, 0x90, 0xab, 0x10,
	0xa8, 0xc3, 0x32, 0x18, 0xc3, 0xeb, 0x4d, 0xd2, 0xa6, 0x59, 0x61, 0x6d, 0x32, 0xc5, 0x57, 0xbb,
	0x09, 0x8e, 0x72, 0xe6, 0x9a, 0xda, 0x96, 0x22, 0xcb, 0x83, 0x3e, 0xcb, 0x5e, 0x62, 0x9f, 0xef,
	0x37, 0x62, 0x29, 0xee, 0xd8, 0x0a, 0xbd, 0x92, 0x75, 0x74, 0x7e, 0x3f, 0xfe, 0x1c, 0xc9, 0x70,
	0x2c, 0x50, 0x66, 0x51, 0xa6, 0x06, 0x5c, 0xa8, 0x88, 0xa7, 0x99, 0x2b, 0x24, 0x57, 0x9c, 0xd4,
	0x4c, 0xf9, 0x69, 0x27, 0xe4, 0x3c, 0x8c, 0x71, 0x50, 0x94, 0x57, 0xf9, 0xe7, 0xc1, 0x1a, 0x33,
	0x26, 0x23, 0xa1, 0xb8, 0xd4, 0xad, 0xdd, 0x19, 0x54, 0xfc, 0x60, 0x15, 0x23, 0x21, 0x70, 0x90,
	0x06, 0x09, 0xb6, 0xad, 0x8e, 0xd5, 0x6b, 0xd0, 0xe2, 0x9b, 0x0c, 0xa1, 0x96, 0x29, 0x2e, 0x83,
	0x10, 0xdb, 0x76, 0xc7, 0xea, 0xb5, 0x86, 0x6d, 0xd7, 0x98, 0xdd, 0xb9, 0x5e, 0x31, 0x65, 0xe8,
	0xdf, 0x09, 0xa4, 0xbb, 0xc6, 0xee, 0x29, 0xd4, 0xe8, 0xfc, 0xec, 0x32, 0x11, 0x31, 0x79, 0x05,
	0x75, 0x85, 0x89, 0x88, 0x03, 0xa5, 0xb5, 0xad, 0xe1, 0x71, 0xc9, 0xfb, 0xe6, 0xa0, 0x80, 0xcb,
	0xb6, 0xee, 0x29, 0x54, 0x3f, 0x7e, 0x28, 0xe0, 0x27, 0x50, 0xd9, 0xe4, 0x28, 0xef, 0x4c, 0x20,
	0xbd, 0x21, 0xcf, 0xa0, 0x11, 0xc8, 0x30, 0x4f, 0x30, 0x55, 0x59, 0xdb, 0xee, 0xec, 0xf7, 0x1a,
	0xf4, 0xbe, 0xd0, 0xef, 0xc3, 0xd1, 0x3f, 0xb9, 0x48, 0x13, 0xea, 0xf3, 0xd9, 0xc2, 0x9f, 0xd2,
	0xc9, 0xc2, 0xd9, 0x23, 0x0d, 0xa8, 0x5c, 0xcd, 0xae, 0xa7, 0x33, 0xc7, 0xea, 0x5f, 0x40, 0xf3,
	0xef, 0x0c, 0x04, 0xa0, 0x7a, 0x79, 0xbd, 0x98, 0x50, 0xdf, 0xd9, 0x23, 0x75, 0x38, 0xa0, 0x93,
	0xd1, 0xb9, 0x63, 0x11, 0x07, 0x9a, 0xe3, 0x91, 0x7f, 0xf6, 0x7e, 0x69, 0xce, 0x6c, 0xd2, 0x02,
	0xd0, 0x95, 0xa2, 0x63, 0xdf, 0x3b, 0x87, 0x7d, 0x29, 0x18, 0x79, 0xe1, 0xea, 0x51, 0xbb, 0xbb,
	0x51, 0xbb, 0x57, 0xa8, 0x6e, 0xf8, 0x7a, 0xa6, 0x2f, 0xa6, 0xfd, 0xed, 0x6b, 0xb7, 0x63, 0xf5,
	0x0e, 0x87, 0x4e, 0x39, 0x01, 0x33, 0x25, 0xba, 0xc5, 0xbd, 0x11, 0xd8, 0x9b, 0xf8, 0x51, 0xc9,
	0x6f, 0x23, 0x39, 0x2a, 0x25, 0x7a, 0x58, 0xd4, 0xde, 0xc4, 0xde, 0x00, 0x6c, 0x71, 0x4b, 0x9e,
	0xff, 0xa7, 0xb8, 0x88, 0x30, 0x2e, 0x0d, 0xdf, 0x0b, 0x43, 0x9d, 0xda, 0xe2, 0xd6, 0xf3, 0xa0,
	0x1e, 0xe4, 0x8a, 0x2f, 0x43, 0x4c, 0x1f, 0xc3, 0x7e, 0x18, 0xac, 0xb6, 0x05, 0xa6, 0x98, 0x7a,
	0x53, 0xa8, 0xa8, 0xe2, 0xd9, 0xbc, 0x7c, 0x20, 0x72, 0x96, 0x05, 0x21, 0xee, 0xd0, 0x9f, 0x26,
	0x73, 0xeb, 0xfe, 0xea, 0xb7, 0x20, 0xd5, 0xbc, 0x37, 0x86, 0x43, 0x29, 0xd8, 0x12, 0xd3, 0xed,
	0x6e, 0xfd, 0x80, 0x6e, 0x81, 0xf2, 0x4b, 0xc4, 0x4a, 0xdd, 0x2f, 0x93, 0x04, 0xa4, 0x60, 0x13,
	0x0d, 0x8d, 0xdf, 0x7e, 0x7a, 0x13, 0x46, 0xea, 0x26, 0x5f, 0xb9, 0x8c, 0x27, 0x03, 0xc5, 0x52,
	0x16, 0xf3, 0x7c, 0xad, 0x1f, 0x3d, 0x3b, 0x09, 0x31, 0x3d, 0xd9, 0xfd, 0x26, 0x66, 0x7d, 0x67,
	0xd6, 0x55, 0xb5, 0xe8, 0x79, 0xfd, 0x27, 0x00, 0x00, 0xff, 0xff, 0x65, 0xd0, 0x0d, 0xd6, 0x48,
	0x03, 0x00, 0x00,
}
