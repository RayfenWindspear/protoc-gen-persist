// Copyright 2017, TCN Inc.
// All rights reserved.

// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:

//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of TCN Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.

// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

package examples;

option go_package="github.com/tcncloud/protoc-gen-persist/examples;examples";

import "persist/options.proto";
import "google/protobuf/timestamp.proto";

import "examples/test/test.proto";

enum TestEnum {
    OPTION_0 = 0;
    OPTION_1 = 1;
}

message ExampleTable1 {
    enum InnerEnum {
        OP_0 = 0;
        OP_1 = 1;
    }
    message InnerMessage {
        int32 id = 1;
    }
    int32 table_id = 1;
    string key = 2;
    string value = 3;
    InnerMessage inner_message = 4;
    InnerEnum inner_enum = 5;
    repeated string string_array = 6;
    bytes bytes_field = 7;
}

message ExternalTypeTestMessage {
    google.protobuf.Timestamp time = 1;
}


service ExampleService1 {
    rpc UnaryExample1(ExampleTable1.InnerMessage) returns (ExampleTable1) {
        option (persist.ql) = {
            query: "SELECT id AS \"table_id\", key, value, msg as inner_message, status as inner_enum FROM test_table WHERE id = $1"
            arguments: ["id"]
        };
    }

    rpc UnaryExample2(examples.test.Test) returns (ExampleTable1) {
        option (persist.ql) = {
            query: "SELECT id AS \"table_id\", key, value, msg as inner_message, status as inner_enum FROM test_table WHERE id = $1"
            arguments: ["id"]
        };
    }

    rpc RandomMethod(ExampleTable1) returns (ExampleTable1);

}
